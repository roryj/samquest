AWSTemplateFormatVersion: 2010-09-09
Description: The SAMQUest SAM template
Resources:
  GameStateProcessorStream:
    Type: 'AWS::Kinesis::Stream'
    Properties:
      ShardCount: 1
  HandleGameState:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: aws-codestar-us-east-1-901134835521-samquest-pipeline
        S3Key: 5a2c9d644a935c933fe629790b53c1f1
      Tags:
        - Value: SAM
          Key: 'lambda:createdBy'
      Environment:
        Variables:
          ACCESS_TOKEN_KEY: test
          CONSUMER_KEY: test
          CONSUMER_SECRET: test
          ACCESS_TOKEN_SECRET: test
          TABLE_NAME: !Ref GameStateTable
      Handler: sam_quest.lambda_handler
      Role: !GetAtt
        - HandleGameStateRole
        - Arn
      Timeout: 300
      Runtime: python3.6
  HandleGameStateTimer:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 20
      EventSourceArn: !GetAtt
        - GameStateProcessorStream
        - Arn
      FunctionName: !Ref HandleGameState
      StartingPosition: TRIM_HORIZON
  TwitterFeedTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      KeySchema:
        - KeyType: HASH
          AttributeName: TwitterAccount
        - KeyType: RANGE
          AttributeName: TwitterPostId
      AttributeDefinitions:
        - AttributeName: TwitterAccount
          AttributeType: S
        - AttributeName: TwitterPostId
          AttributeType: 'N'
      ProvisionedThroughput:
        WriteCapacityUnits: 10
        ReadCapacityUnits: 10
  ProcessTwitterFeedTimer:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        - Id: ProcessTwitterFeedTimerLambdaTarget
          Arn: !GetAtt
            - ProcessTwitterFeed
            - Arn
  ProcessTwitterFeed:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: aws-codestar-us-east-1-901134835521-samquest-pipeline
        S3Key: 5a2c9d644a935c933fe629790b53c1f1
      Tags:
        - Value: SAM
          Key: 'lambda:createdBy'
      Environment:
        Variables:
          CONSUMER_SECRET: test
          ACCESS_TOKEN_SECRET: test
          KINESIS_STREAM: !Ref GameStateProcessorStream
          ACCESS_TOKEN_KEY: test
          TABLE_NAME: !Ref TwitterFeedTable
          CONSUMER_KEY: test
      Handler: process_twitter_feed.lambda_handler
      Role: !GetAtt
        - ProcessTwitterFeedRole
        - Arn
      Timeout: 300
      Runtime: python3.6
  HandleGameStateRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
  ProcessTwitterFeedTimerPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      Principal: events.amazonaws.com
      FunctionName: !Ref ProcessTwitterFeed
      SourceArn: !GetAtt
        - ProcessTwitterFeedTimer
        - Arn
  GameStateTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      ProvisionedThroughput:
        WriteCapacityUnits: 10
        ReadCapacityUnits: 10
      KeySchema:
        - KeyType: HASH
          AttributeName: TweetStartId
      AttributeDefinitions:
        - AttributeName: TweetStartId
          AttributeType: 'N'
        - AttributeName: GameCreator
          AttributeType: S
        - AttributeName: CurrentTweetId
          AttributeType: 'N'
      GlobalSecondaryIndexes:
        - KeySchema:
            - KeyType: HASH
              AttributeName: GameCreator
          IndexName: GameCreator-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 10
            ReadCapacityUnits: 10
        - KeySchema:
            - KeyType: HASH
              AttributeName: CurrentTweetId
          IndexName: CurrentTweetId-index
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            WriteCapacityUnits: 10
            ReadCapacityUnits: 10
  ProcessTwitterFeedRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: ProcessTwitterFeedRolePolicy2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'kinesis:PutRecord'
                  - 'kinesis:PutRecords'
                Resource: !GetAtt
                  - GameStateProcessorStream
                  - Arn
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
